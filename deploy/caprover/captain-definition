{
  "schemaVersion": 2,
  "dockerfileLines": [
    "FROM node:20-alpine AS frontend-deps",
    "RUN corepack enable && corepack prepare pnpm@latest --activate",
    "WORKDIR /app/frontend",
    "COPY frontend/package.json frontend/pnpm-lock.yaml ./",
    "RUN pnpm install --frozen-lockfile",
    "",
    "FROM node:20-alpine AS frontend-builder",
    "RUN corepack enable && corepack prepare pnpm@latest --activate",
    "WORKDIR /app/frontend",
    "COPY --from=frontend-deps /app/frontend/node_modules ./node_modules",
    "COPY frontend/ ./",
    "RUN pnpm run build",
    "",
    "FROM golang:1.25-alpine AS backend-builder",
    "RUN apk add --no-cache git",
    "WORKDIR /app/backend",
    "COPY backend/go.mod backend/go.sum ./",
    "RUN go mod download",
    "COPY backend/ ./",
    "RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o server ./cmd/server",
    "",
    "FROM alpine:latest",
    "RUN apk --no-cache add ca-certificates nodejs npm nginx",
    "WORKDIR /app",
    "",
    "# Copy backend binary",
    "COPY --from=backend-builder /app/backend/server ./backend/",
    "",
    "# Copy frontend standalone build",
    "COPY --from=frontend-builder /app/frontend/.next/standalone ./frontend/",
    "COPY --from=frontend-builder /app/frontend/.next/static ./frontend/.next/static",
    "COPY --from=frontend-builder /app/frontend/public ./frontend/public",
    "",
    "# Create nginx configuration",
    "RUN mkdir -p /run/nginx && \\",
    "    echo 'user nginx;' > /etc/nginx/nginx.conf && \\",
    "    echo 'worker_processes auto;' >> /etc/nginx/nginx.conf && \\",
    "    echo 'error_log /var/log/nginx/error.log warn;' >> /etc/nginx/nginx.conf && \\",
    "    echo 'pid /run/nginx/nginx.pid;' >> /etc/nginx/nginx.conf && \\",
    "    echo 'events { worker_connections 1024; }' >> /etc/nginx/nginx.conf && \\",
    "    echo 'http {' >> /etc/nginx/nginx.conf && \\",
    "    echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \\",
    "    echo '  default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \\",
    "    echo '  sendfile on;' >> /etc/nginx/nginx.conf && \\",
    "    echo '  keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \\",
    "    echo '  server {' >> /etc/nginx/nginx.conf && \\",
    "    echo '    listen 80;' >> /etc/nginx/nginx.conf && \\",
    "    echo '    server_name _;' >> /etc/nginx/nginx.conf && \\",
    "    echo '    location /api/ {' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_pass http://localhost:8080;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_http_version 1.1;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Upgrade \\$http_upgrade;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Connection \"upgrade\";' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Host \\$host;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Real-IP \\$remote_addr;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Forwarded-Proto \\$scheme;' >> /etc/nginx/nginx.conf && \\",
    "    echo '    }' >> /etc/nginx/nginx.conf && \\",
    "    echo '    location /health {' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_pass http://localhost:8080;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_http_version 1.1;' >> /etc/nginx/nginx.conf && \\",
    "    echo '    }' >> /etc/nginx/nginx.conf && \\",
    "    echo '    location / {' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_pass http://localhost:3000;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_http_version 1.1;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Upgrade \\$http_upgrade;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Connection \"upgrade\";' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header Host \\$host;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Real-IP \\$remote_addr;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;' >> /etc/nginx/nginx.conf && \\",
    "    echo '      proxy_set_header X-Forwarded-Proto \\$scheme;' >> /etc/nginx/nginx.conf && \\",
    "    echo '    }' >> /etc/nginx/nginx.conf && \\",
    "    echo '  }' >> /etc/nginx/nginx.conf && \\",
    "    echo '}' >> /etc/nginx/nginx.conf",
    "",
    "# Create startup script",
    "RUN echo '#!/bin/sh' > /app/start.sh && \\",
    "    echo 'cd /app/backend && ./server &' >> /app/start.sh && \\",
    "    echo 'cd /app/frontend && node server.js &' >> /app/start.sh && \\",
    "    echo 'nginx -g \"daemon off;\"' >> /app/start.sh && \\",
    "    chmod +x /app/start.sh",
    "",
    "EXPOSE 80",
    "CMD [\"/app/start.sh\"]"
  ]
}
